group basic : root;

//
// Collaboration diagram templates
//

COLLAB_GRAPH_in(graph, decor) ::= <<
$root_in(graph)$
<!-- $graph.name$: collaboration diagram -->
<defs>
<style type="text/css"><![CDATA[ 
	text.collabgraph { font-family: $decor.meta.COLLAB_GRAPH.config.ft.name$; font-size: $decor.meta.COLLAB_GRAPH.config.ft.size$px; }
	text.collabnode { fill: black; font-family: $decor.meta.COLLAB_NODE.config.ft.name$; font-size: $decor.meta.COLLAB_NODE.config.ft.size$px; }
	rect.collabnode { fill: url(#root_gradient); stroke: midnightblue; stroke-width: 1px; opacity: 0.75; }	
	line.collabnode { stroke: black; stroke-width: 1px; }	
	line.collabedge, path.collabedge { fill:none; stroke: dimgrey; stroke-width: 1px; }
	text.collabedge { fill: black; font-family: $decor.meta.COLLAB_EDGE.config.ft.name$; font-size: $decor.meta.COLLAB_EDGE.config.ft.size$px; }
	rect.collabedge { fill: white; stroke: white; stroke-width: 1px; opacity: 1; }	
]]></style>
</defs>

>>

COLLAB_NODE_in(node, decor) ::= <<

<rect x="$node.pos.x$" y="$node.pos.y$" width="$node.size.x$" height="$node.size.y$" rx="2" class="collabnode"/>
<line x1="$decor.underline1.x$" y1="$decor.underline1.y$" x2="$decor.underline2.x$" y2="$decor.underline2.y$" class="collabnode"/>
<text x="$decor.textPos.x$" y="$decor.textPos.y$" class="collabnode">$node.name$</text>
>>

COLLAB_EDGE_in(edge, decor) ::= <<

<path d="M $edge.node1Port.x$ $edge.node1Port.y$ L $edge.bends:{b|$b.pos.x$ $b.pos.y$ }$$edge.node2Port.x$ $edge.node2Port.y$" class="collabedge"/>
<line x1="$decor.arrowLeft.x$" y1="$decor.arrowLeft.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="collabedge"/>
<line x1="$decor.arrowRight.x$" y1="$decor.arrowRight.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="collabedge"/>
<rect x="$decor.textBgPos.x$" y="$decor.textBgPos.y$" width="$decor.textBgSize.x$" height="$decor.textBgSize.y$" class="collabedge"/>
<text x="$decor.textPos.x$" y="$decor.textPos.y$" class="collabedge">$edge.name$</text>
>>

COLLAB_GRAPH_out(graph, decor) ::= <<

$root_out(graph)$
>>

DUMMY_EDGE_in(edge, decor) ::= <<

<line x1="$edge.node1Port.x$" y1="$edge.node1Port.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="dummyedge"/>
>>
