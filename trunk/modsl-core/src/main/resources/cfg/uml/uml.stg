group basic : root;

//
// Collaboration diagram templates
//

COLLAB_GRAPH_in(graph, decor) ::= <<
$root_in(graph)$
<!-- $graph.name$: collaboration diagram -->
<defs>
<style type="text/css"><![CDATA[ 
	text.graph { 
		$font_def(graph.meta.COLLAB_GRAPH.config.ft)$ 
	}
	rect.node { 
		fill: url(#root_gradient); 
		stroke: midnightblue; 
		stroke-width: 1px; 
		opacity: 0.75; 
	}	
	text.nodelabel { 
		fill: black;
		$font_def(graph.meta.COLLAB_NODE_LABEL.config.ft)$ 
	}
	line.nodelabel { 
		stroke: black; 
		stroke-width: 1px; 
	}	
	line.edge, path.edge { 
		fill:none; 
		stroke: dimgrey; 
		stroke-width: 1px; 
	}
	text.edgelabel { 
		fill: black; 
		$font_def(graph.meta.COLLAB_EDGE_LABEL.config.ft)$ 
	}
	rect.edgelabel { 
		fill: white; 
		stroke: white; 
		stroke-width: 1px; 
		opacity: 1; 
	}	
]]></style>
</defs>

>>

COLLAB_GRAPH_out(graph, decor) ::= <<

$root_out(graph)$
>>

COLLAB_NODE_in(node, decor) ::= <<

<rect x="$node.pos.x$" y="$node.pos.y$" width="$node.size.x$" height="$node.size.y$" rx="2" class="node"/>
>>

COLLAB_NODE_LABEL_in(label, decor) ::= <<

<line x1="$label.underline1.x$" y1="$label.underline1.y$" x2="$label.underline2.x$" y2="$label.underline2.y$" class="nodelabel"/>
<text x="$label.textPos.x$" y="$label.textPos.y$" class="nodelabel">$label.name$</text>
>>

COLLAB_EDGE_in(edge, decor) ::= <<

<path d="M$edge.node1Port.x$,$edge.node1Port.y$ L$edge.node1Port.x$,$edge.node1Port.y$ $edge.bends:{b|Q$b.pos.x$,$b.pos.y$ }$ $edge.node2Port.x$,$edge.node2Port.y$" class="edge"/>
<line x1="$decor.arrowLeft.x$" y1="$decor.arrowLeft.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="edge"/>
<line x1="$decor.arrowRight.x$" y1="$decor.arrowRight.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="edge"/>
>>

COLLAB_EDGE_LABEL_in(label, decor) ::= <<

<rect x="$label.pos.x$" y="$label.pos.y$" width="$label.size.x$" height="$label.size.y$" class="edgelabel"/>
<text x="$label.textPos.x$" y="$label.textPos.y$" class="edgelabel">$label.name$</text>
>>

//
// Class diagram templates
//

CLASS_GRAPH_in(graph, decor) ::= <<
$root_in(graph)$
<!-- $graph.name$: class diagram -->
<defs>
<style type="text/css"><![CDATA[ 
	text.graph { 
		$font_def(graph.meta.CLASS_GRAPH.config.ft)$ 
	}
	rect.classnode { 
		fill: url(#root_gradient); 
		stroke: midnightblue; 
		stroke-width: 1px; 
		opacity: 0.75; 
	}	
	line.classnode { 
		stroke: midnightblue; 
		stroke-width: 1px; 
	}
	text.classnodelabel { 
		fill: black; 
		$font_def(graph.meta.CLASS_CLASS_NODE_LABEL.config.ft)$ 
	}
	rect.interfacenode { 
		fill: url(#root_gradient); 
		stroke: midnightblue; 
		stroke-width: 1px; 
		opacity: 0.75; 
	}	
	line.interfacenode { 
		stroke: midnightblue; 
		stroke-width: 1px; 
	}
	text.interfacenodelabel { 
		fill: black; 
		$font_def(graph.meta.CLASS_INTERFACE_NODE_LABEL.config.ft)$ 
	}
	text.varnodelabel { 
		fill: black; 
		$font_def(graph.meta.CLASS_VAR_NODE_LABEL.config.ft)$ 
	}
	text.methodnodelabel { 
		fill: black; 
		$font_def(graph.meta.CLASS_METHOD_NODE_LABEL.config.ft)$ 
	}
	text.staticvarnodelabel { 
		fill: black; 
		$font_def(graph.meta.CLASS_STATIC_VAR_NODE_LABEL.config.ft)$ 
	}
	line.staticvarnodelabel { 
		stroke: black; 
		stroke-width: 0.75px; 
	}	
	text.staticmethodnodelabel { 
		fill: black; 
		$font_def(graph.meta.CLASS_STATIC_METHOD_NODE_LABEL.config.ft)$ 
	}
	line.staticmethodnodelabel { 
		stroke: black; 
		stroke-width: 0.75px; 
	}	
	line.extendsedge, line.implementsedge, line.aggregationedge  { 
		fill:none; 
		stroke: dimgrey; 
		stroke-width: 1px; 
	} 
	text.edgelabel { 
		fill: black; 
		$font_def(graph.meta.CLASS_MULTIPLICITY_FROM_EDGE_LABEL.config.ft)$ 
	}
	rect.edgelabel { 
		fill: white; 
		stroke: white; 
		stroke-width: 1px; 
		opacity: 1; 
	}	
]]></style>
</defs>

>>

CLASS_GRAPH_out(graph, decor) ::= <<

$root_out(graph)$
>>

CLASS_CLASS_NODE_in(node, decor) ::= <<

<rect x="$node.pos.x$" y="$node.pos.y$" width="$node.size.x$" height="$node.size.y$" rx="2" class="classnode"/>
<line x1="$decor.headerLine1.x$" y1="$decor.headerLine1.y$" x2="$decor.headerLine2.x$" y2="$decor.headerLine2.y$" class="classnode"/>
<line x1="$decor.vLine1.x$" y1="$decor.vLine1.y$" x2="$decor.vLine2.x$" y2="$decor.vLine2.y$" class="classnode"/>
>>

CLASS_CLASS_NODE_LABEL_in(label, decor) ::= <<

<text x="$label.textPos.x$" y="$label.textPos.y$" class="classnodelabel">$label.name$</text>
>>

CLASS_INTERFACE_NODE_in(node, decor) ::= <<

<rect x="$node.pos.x$" y="$node.pos.y$" width="$node.size.x$" height="$node.size.y$" rx="2" class="interfacenode"/>
<line x1="$decor.headerLine1.x$" y1="$decor.headerLine1.y$" x2="$decor.headerLine2.x$" y2="$decor.headerLine2.y$" class="interfacenode"/>
<line x1="$decor.vLine1.x$" y1="$decor.vLine1.y$" x2="$decor.vLine2.x$" y2="$decor.vLine2.y$" class="interfacenode"/>
>>

CLASS_INTERFACE_NODE_LABEL_in(label, decor) ::= <<

<text x="$label.textPos.x$" y="$label.textPos.y$" class="interfacenodelabel">$label.name$</text>
>>

CLASS_VAR_NODE_LABEL_in(label, decor) ::= <<

<text x="$label.textPos.x$" y="$label.textPos.y$" class="varnodelabel">$label.name$</text>
>>

CLASS_METHOD_NODE_LABEL_in(label, decor) ::= <<

<text x="$label.textPos.x$" y="$label.textPos.y$" class="methodnodelabel">$label.name$</text>
>>

CLASS_STATIC_VAR_NODE_LABEL_in(label, decor) ::= <<

<line x1="$label.underline1.x$" y1="$label.underline1.y$" x2="$label.underline2.x$" y2="$label.underline2.y$" 
	class="staticvarnodelabel"/>
<text x="$label.textPos.x$" y="$label.textPos.y$" class="staticvarnodelabel">$label.name$</text>
>>

CLASS_STATIC_METHOD_NODE_LABEL_in(label, decor) ::= <<

<line x1="$label.underline1.x$" y1="$label.underline1.y$" x2="$label.underline2.x$" y2="$label.underline2.y$" 
	class="staticmethodnodelabel"/>
<text x="$label.textPos.x$" y="$label.textPos.y$" class="staticmethodnodelabel">$label.name$</text>
>>

CLASS_EXTENDS_EDGE_in(edge, decor) ::= <<

<line x1="$edge.node1Port.x$" y1="$edge.node1Port.y$" x2="$decor.arrowMiddle.x$" y2="$decor.arrowMiddle.y$" class="extendsedge"/>
<line x1="$decor.arrowLeft.x$" y1="$decor.arrowLeft.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="extendsedge"/>
<line x1="$decor.arrowRight.x$" y1="$decor.arrowRight.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="extendsedge"/>
<line x1="$decor.arrowLeft.x$" y1="$decor.arrowLeft.y$" x2="$decor.arrowRight.x$" y2="$decor.arrowRight.y$" class="extendsedge"/>
>>

CLASS_IMPLEMENTS_EDGE_in(edge, decor) ::= <<

<line x1="$edge.node1Port.x$" y1="$edge.node1Port.y$" x2="$decor.arrowMiddle.x$" y2="$decor.arrowMiddle.y$" class="implementsedge" style="stroke-dasharray:5,3;"/>
<line x1="$decor.arrowLeft.x$" y1="$decor.arrowLeft.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="implementsedge"/>
<line x1="$decor.arrowRight.x$" y1="$decor.arrowRight.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="implementsedge"/>
<line x1="$decor.arrowLeft.x$" y1="$decor.arrowLeft.y$" x2="$decor.arrowRight.x$" y2="$decor.arrowRight.y$" class="implementsedge"/>
>>

CLASS_AGGREGATION_EDGE_in(edge, decor) ::= <<

<line x1="$edge.node1Port.x$" y1="$edge.node1Port.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="aggregationedge"/>
<line x1="$decor.arrowLeft.x$" y1="$decor.arrowLeft.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="aggregationedge"/>
<line x1="$decor.arrowRight.x$" y1="$decor.arrowRight.y$" x2="$edge.node2Port.x$" y2="$edge.node2Port.y$" class="aggregationedge"/>
>>

CLASS_MULTIPLICITY_FROM_EDGE_LABEL_in(label, decor) ::= <<

<rect x="$label.pos.x$" y="$label.pos.y$" width="$label.size.x$" height="$label.size.y$" class="edgelabel"/>
<text x="$label.textPos.x$" y="$label.textPos.y$" class="edgelabel">$label.name$</text>
>>

CLASS_MULTIPLICITY_TO_EDGE_LABEL_in(label, decor) ::= <<

<rect x="$label.pos.x$" y="$label.pos.y$" width="$label.size.x$" height="$label.size.y$" class="edgelabel"/>
<text x="$label.textPos.x$" y="$label.textPos.y$" class="edgelabel">$label.name$</text>
>>